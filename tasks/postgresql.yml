---
## PostgreSQL for sympa installation and configuration tasks

- name: Install PostgreSQL
  apt:
    state: present
    update_cache: yes
    cache_valid_time: 3600
    name:
      - postgresql
      - postgresql-contrib
      - libpq-dev
      - python-psycopg2
  tags: postgresql

- name: PostgreSQL service is running
  service:
    name: postgresql
    state: started
    enabled: yes
  tags: postgresql

- name: Create sympa database
  become: true
  become_user: postgres
  postgresql_db:
    name: "{{ sympa_db_name }}"
    encoding: UTF-8
    lc_collate: es_UY.UTF-8
    lc_ctype: es_UY.UTF-8
    template: template0
    state: present
  tags: postgresql

- name: Create sympa user with access to the database
  become: true
  become_user: postgres
  postgresql_user:
    db: "{{ sympa_db_name }}"
    name: "{{ sympa_db_user }}"
    password: "{{ sympa_db_password | mandatory }}"
    priv: ALL
    state: present
  tags: postgresql

## Debconf keys for sympa database

- name: Definir opciones debconf de sympa, relativas a la base PostgreSQL
  debconf:
    name: "{{ item.name }}"
    question: "{{ item.question }}"
    value: "{{ item.value }}"
    vtype: "{{ item.vtype }}"
  loop:
    ## the database type, here postgres
  - { name: 'sympa', question: 'sympa/database-type', value: 'pgsql' , vtype: select }
    ## the sympa database name
  - { name: 'sympa', question: 'sympa/db/dbname', value: '{{ sympa_db_name }}' , vtype: string }
    ## The sympa database user
  - { name: 'sympa', question: 'sympa/db/app-user', value: '{{ sympa_db_user }}' , vtype: string }
    ## The sympa database password
  - { name: 'sympa', question: 'sympa/pgsql/app-pass', value: '{{ sympa_db_password | mandatory }}' , vtype: password }
    ## Use the localhost (and not a distant host to define)
  - { name: 'sympa', question: 'sympa/remote/host', value: 'localhost' , vtype: select }


...
